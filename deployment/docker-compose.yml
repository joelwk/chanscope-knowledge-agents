# yaml-language-server: $schema=https://raw.githubusercontent.com/compose-spec/compose-spec/master/schema/compose-spec.json
# The version attribute is now auto-detected and the explicit declaration is obsolete
# Removed version: '3.8' to avoid warnings

services:
  app:
    build:
      context: ..
      dockerfile: deployment/Dockerfile
    volumes:
      # Configuration files
      - type: bind
        source: ../.env
        target: /app/.env
        read_only: true
      # Application code
      - type: bind
        source: ../api
        target: /app/api
        read_only: true
      - type: bind
        source: ../config
        target: /app/config
        read_only: true
      - type: bind
        source: ../knowledge_agents
        target: /app/knowledge_agents
        read_only: true
      - type: volume
        source: app_data
        target: /app/data
        read_only: false
      - type: bind
        source: ../tests
        target: /app/tests
        read_only: true
      # Persistent volumes
      - type: volume
        source: poetry_cache
        target: /home/nobody/.cache/pypoetry
      - type: volume
        source: poetry_virtualenvs
        target: /app/.venv
      - type: volume
        source: app_logs
        target: /app/logs
      - type: volume
        source: app_temp
        target: /app/temp_files
      - type: bind
        source: ../scripts
        target: /app/scripts
        read_only: false
    user: "nobody:nogroup"
    env_file:
      - ../.env
    environment:
      # Docker environment
      - DOCKER_ENV=true
      - PYTHONPATH=/app
      - PYTHONUNBUFFERED=1
      - FASTAPI_ENV=production
      - FASTAPI_DEBUG=true
      - REPLIT_ENV=false
      - HOME=/app
      - POETRY_CACHE_DIR=/home/nobody/.cache/pypoetry
      - POETRY_VIRTUALENVS_IN_PROJECT=true
      
      # Data management settings
      - DATA_RETENTION_DAYS=14
      - ENABLE_DATA_SCHEDULER=true
      - DATA_UPDATE_INTERVAL=3600
      - AUTO_CHECK_DATA=true
      - FORCE_DATA_REFRESH=false
      - LOG_LEVEL=info
      
      # API configuration
      - API_PORT=80
      - HOST=0.0.0.0
      - API_WORKERS=4
      
      # Test execution control (disabled by default in production)
      - RUN_TESTS_ON_STARTUP=false
      - TEST_MODE=false
      - USE_MOCK_DATA=false
      - SKIP_DATA_UPDATE=false
      
      # System Configuration
      - TZ=UTC
      - PYTHONOPTIMIZE=2
      - PYTHONASYNCIODEBUG=0
      - PYTHONWARNINGS=ignore
    ports:
      - "80:80"
    networks:
      knowledge-net:
        aliases:
          - knowledge-api
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 300s
    restart: unless-stopped
    stop_grace_period: 30s
    ulimits:
      nofile:
        soft: 65536
        hard: 65536
    deploy:
      resources:
        limits:
          memory: 8G
          cpus: '4'
        reservations:
          memory: 2G
          cpus: '1'
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "3"
        tag: "{{.Name}}"
        labels: "production"
        env: "FASTAPI_ENV,DOCKER_ENV"

networks:
  knowledge-net:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.19.0.0/16
          gateway: 172.19.0.1
    labels:
      environment: production

volumes:
  poetry_cache:
    driver: local
  poetry_virtualenvs:
    driver: local
  app_data:
    driver: local
  app_logs:
    driver: local
  app_temp:
    driver: local